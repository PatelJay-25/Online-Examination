image: node:18

stages:
  - install
  - test
  - build
  - deploy

# Backend pipeline
backend_install:
  stage: install
  script:
    - cd backend
    - npm install
  artifacts:
    paths:
      - backend/node_modules/

backend_test:
  stage: test
  script:
    - cd backend
    - npm test || echo "No tests defined"
  dependencies:
    - backend_install

backend_build:
  stage: build
  script:
    - cd backend
    - echo "No build step for backend"
  dependencies:
    - backend_install

# Frontend pipeline
frontend_install:
  stage: install
  script:
    - cd src
    - npm install
  artifacts:
    paths:
      - src/node_modules/

frontend_test:
  stage: test
  script:
    - cd src
    - npm test || echo "No tests defined"
  dependencies:
    - frontend_install

frontend_build:
  stage: build
  script:
    - cd src
    - npm run build || echo "No build step for frontend"
  dependencies:
    - frontend_install
    - frontend_test
  artifacts:
    paths:
      - src/build/

# Deploy to EC2

deploy_ec2:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh
    - echo "$EC2_SSH_KEY" > /tmp/id_rsa
    - chmod 600 /tmp/id_rsa
  script:
    - scp -i /tmp/id_rsa -o StrictHostKeyChecking=no -r backend ec2-user@54.89.241.121:/home/ec2-user/your-app-folder/
    - scp -i /tmp/id_rsa -o StrictHostKeyChecking=no -r src/build ec2-user@54.89.241.121:/home/ec2-user/your-app-folder/frontend/
    - ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ec2-user@54.89.241.121 'cd /home/ec2-user/your-app-folder/backend && npm install && pm2 restart all || pm2 start src/server.js --name awt-backend'
  dependencies:
    - backend_build
    - frontend_build
  when: on_success 